//
// TimeSheetsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TimeSheetsAPI {
    /**

     - parameter fileName: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTimesheets(fileName: String, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getTimesheetsWithRequestBuilder(fileName: fileName).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /v1/TimeSheets/{fileName}
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter fileName: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func getTimesheetsWithRequestBuilder(fileName: String) -> RequestBuilder<Void> {
        var path = "/v1/TimeSheets/{fileName}"
        let fileNamePreEscape = "\(fileName)"
        let fileNamePostEscape = fileNamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{fileName}", with: fileNamePostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter files: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func uploadTimesheets(files: [Any]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        uploadTimesheetsWithRequestBuilder(files: files).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /v1/TimeSheets
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter files: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func uploadTimesheetsWithRequestBuilder(files: [Any]? = nil) -> RequestBuilder<Void> {
        let path = "/v1/TimeSheets"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "files": files
        ])

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
