//
// FinancesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class FinancesAPI {
    /**

     - parameter accountId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteAccount(accountId: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        deleteAccountWithRequestBuilder(accountId: accountId).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /v1/Finances/accounts/{accountId}
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter accountId: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func deleteAccountWithRequestBuilder(accountId: Int) -> RequestBuilder<Void> {
        var path = "/v1/Finances/accounts/{accountId}"
        let accountIdPreEscape = "\(accountId)"
        let accountIdPostEscape = accountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{accountId}", with: accountIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAccount(completion: @escaping ((_ data: [FinancialAccountSlim]?,_ error: Error?) -> Void)) {
        getAccountWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/Finances/accounts
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example=[ {
  "number" : "number",
  "isSalaryAccount" : true,
  "accountType" : "accountType",
  "name" : "name",
  "nickname" : "nickname",
  "financialInstitutionName" : "financialInstitutionName",
  "financialAccountId" : 0,
  "assetType" : "assetType"
}, {
  "number" : "number",
  "isSalaryAccount" : true,
  "accountType" : "accountType",
  "name" : "name",
  "nickname" : "nickname",
  "financialInstitutionName" : "financialInstitutionName",
  "financialAccountId" : 0,
  "assetType" : "assetType"
} ]}]

     - returns: RequestBuilder<[FinancialAccountSlim]> 
     */
    open class func getAccountWithRequestBuilder() -> RequestBuilder<[FinancialAccountSlim]> {
        let path = "/v1/Finances/accounts"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[FinancialAccountSlim]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getBasiqConnectionForUpdate(completion: @escaping ((_ data: GetConnectionUpdateResponse?,_ error: Error?) -> Void)) {
        getBasiqConnectionForUpdateWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/Finances/connections/update
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "secondaryLoginIdCaption" : "secondaryLoginIdCaption",
  "institutionId" : "institutionId",
  "passwordCaption" : "passwordCaption",
  "apiConnectionUrl" : "apiConnectionUrl",
  "apiContentType" : "apiContentType",
  "securityCodeCaption" : "securityCodeCaption",
  "shortName" : "shortName",
  "accessToken" : "accessToken",
  "expiresInSeconds" : 0
}}]

     - returns: RequestBuilder<GetConnectionUpdateResponse> 
     */
    open class func getBasiqConnectionForUpdateWithRequestBuilder() -> RequestBuilder<GetConnectionUpdateResponse> {
        let path = "/v1/Finances/connections/update"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetConnectionUpdateResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getBasiqConnectionToken(completion: @escaping ((_ data: GetAppTokenResponse?,_ error: Error?) -> Void)) {
        getBasiqConnectionTokenWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/Finances/connections/token
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "apiConnectionUrl" : "apiConnectionUrl",
  "apiContentType" : "apiContentType",
  "accessToken" : "accessToken",
  "expiresInSeconds" : 0
}}]

     - returns: RequestBuilder<GetAppTokenResponse> 
     */
    open class func getBasiqConnectionTokenWithRequestBuilder() -> RequestBuilder<GetAppTokenResponse> {
        let path = "/v1/Finances/connections/token"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetAppTokenResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getFinancialInstitutions(completion: @escaping ((_ data: GetFinancialInstitutionResponse?,_ error: Error?) -> Void)) {
        getFinancialInstitutionsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/Finances/institutions
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "institutions" : [ {
    "authorization" : "authorization",
    "secondaryLoginIdCaption" : "secondaryLoginIdCaption",
    "passwordCaption" : "passwordCaption",
    "isWarning" : true,
    "loginIdCaption" : "loginIdCaption",
    "squareLogoUrl" : "squareLogoUrl",
    "fullLogoUrl" : "fullLogoUrl",
    "displayOrder" : 0,
    "securityCodeCaption" : "securityCodeCaption",
    "disabled" : true,
    "id" : "id",
    "shortName" : "shortName"
  }, {
    "authorization" : "authorization",
    "secondaryLoginIdCaption" : "secondaryLoginIdCaption",
    "passwordCaption" : "passwordCaption",
    "isWarning" : true,
    "loginIdCaption" : "loginIdCaption",
    "squareLogoUrl" : "squareLogoUrl",
    "fullLogoUrl" : "fullLogoUrl",
    "displayOrder" : 0,
    "securityCodeCaption" : "securityCodeCaption",
    "disabled" : true,
    "id" : "id",
    "shortName" : "shortName"
  } ],
  "disableMessage" : "disableMessage",
  "warningMessage" : "warningMessage"
}}]

     - returns: RequestBuilder<GetFinancialInstitutionResponse> 
     */
    open class func getFinancialInstitutionsWithRequestBuilder() -> RequestBuilder<GetFinancialInstitutionResponse> {
        let path = "/v1/Finances/institutions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetFinancialInstitutionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter jobId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getJobStatus(jobId: String, completion: @escaping ((_ data: GetConnectionJobResponse?,_ error: Error?) -> Void)) {
        getJobStatusWithRequestBuilder(jobId: jobId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /v1/Finances/connections/jobs/{jobId}/status
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "showReconnect" : true,
  "institutionId" : "institutionId",
  "showClose" : true,
  "errorTitle" : "errorTitle",
  "actionRequiredGuidelines" : [ "actionRequiredGuidelines", "actionRequiredGuidelines" ],
  "errorDetail" : "errorDetail",
  "showChatWithUs" : true,
  "step" : "VerifyingCredentials",
  "error" : "InvalidCredentials",
  "stepStatus" : "Pending",
  "canSelectBank" : true
}}]
     
     - parameter jobId: (path)  

     - returns: RequestBuilder<GetConnectionJobResponse> 
     */
    open class func getJobStatusWithRequestBuilder(jobId: String) -> RequestBuilder<GetConnectionJobResponse> {
        var path = "/v1/Finances/connections/jobs/{jobId}/status"
        let jobIdPreEscape = "\(jobId)"
        let jobIdPostEscape = jobIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jobId}", with: jobIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetConnectionJobResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter accounts: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postAccounts(accounts: [PostFinancialAccountRequest]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postAccountsWithRequestBuilder(accounts: accounts).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /v1/Finances/accounts
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter accounts: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postAccountsWithRequestBuilder(accounts: [PostFinancialAccountRequest]? = nil) -> RequestBuilder<Void> {
        let path = "/v1/Finances/accounts"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: accounts)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter request: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postBasiqConnectionJob(request: PostConnectionJobRequest? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postBasiqConnectionJobWithRequestBuilder(request: request).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /v1/Finances/connections/jobs
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter request: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postBasiqConnectionJobWithRequestBuilder(request: PostConnectionJobRequest? = nil) -> RequestBuilder<Void> {
        let path = "/v1/Finances/connections/jobs"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: request)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter institutions: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postFinancialInstitutions(institutions: [PostFinancialInstitutionRequest]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postFinancialInstitutionsWithRequestBuilder(institutions: institutions).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /v1/Finances/institutions
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter institutions: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postFinancialInstitutionsWithRequestBuilder(institutions: [PostFinancialInstitutionRequest]? = nil) -> RequestBuilder<Void> {
        let path = "/v1/Finances/institutions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: institutions)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter transactions: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postTransactions(transactions: [PostFinancialTransactionRequest]? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        postTransactionsWithRequestBuilder(transactions: transactions).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /v1/Finances/transactions
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter transactions: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func postTransactionsWithRequestBuilder(transactions: [PostFinancialTransactionRequest]? = nil) -> RequestBuilder<Void> {
        let path = "/v1/Finances/transactions"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: transactions)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter account: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func putAccount(account: PutFinancialAccountRequest? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        putAccountWithRequestBuilder(account: account).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /v1/Finances/accounts
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     
     - parameter account: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func putAccountWithRequestBuilder(account: PutFinancialAccountRequest? = nil) -> RequestBuilder<Void> {
        let path = "/v1/Finances/accounts"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: account)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func refreshConnection(completion: @escaping ((_ data: GetRefreshConnectionResponse?,_ error: Error?) -> Void)) {
        refreshConnectionWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - PUT /v1/Finances/connections/refresh
     - API Key:
       - type: apiKey Authorization 
       - name: Bearer
     - examples: [{contentType=application/json, example={
  "jobId" : "jobId"
}}]

     - returns: RequestBuilder<GetRefreshConnectionResponse> 
     */
    open class func refreshConnectionWithRequestBuilder() -> RequestBuilder<GetRefreshConnectionResponse> {
        let path = "/v1/Finances/connections/refresh"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetRefreshConnectionResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
