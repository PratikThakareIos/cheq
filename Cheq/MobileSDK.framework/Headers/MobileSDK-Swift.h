// Generated by Apple Swift version 5.0 effective-4.1.50 (swiftlang-1001.0.69.5 clang-1001.0.46.3)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#import <MobileSDK/MobileSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MobileSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, AccountType, closed) {
  AccountTypeUNKNOWN = 0,
  AccountTypeBANK = 1,
  AccountTypeCREDIT_CARD = 2,
  AccountTypeLOAN = 3,
  AccountTypeINVESTMENT = 4,
  AccountTypeMORTGAGE = 5,
  AccountTypeASSET = 6,
  AccountTypeLIABILITY = 7,
  AccountTypeBILLS = 8,
  AccountTypeINSURANCE = 9,
  AccountTypeLOYALTY = 10,
};


SWIFT_CLASS("_TtC9MobileSDK18SerialisableObject")
@interface SerialisableObject : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// This class contains details about an error which is returned by the API.
SWIFT_CLASS("_TtC9MobileSDK13ApiErrorModel")
@interface ApiErrorModel : SerialisableObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull messages;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9MobileSDK16ApiResponseModel")
@interface ApiResponseModel : SerialisableObject
@property (nonatomic) BOOL success;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, AssetCategory, closed) {
  AssetCategoryUNKNOWN = 0,
  AssetCategoryBANK_ACCOUNTS = 1,
  AssetCategoryPROPERTY = 2,
  AssetCategoryVEHICLE = 3,
  AssetCategoryINVESTMENTS = 4,
  AssetCategoryCREDIT_CARDS = 5,
  AssetCategoryLOANS = 6,
  AssetCategoryOTHER_ASSETS = 7,
  AssetCategoryLOYALTY = 8,
  AssetCategoryOTHER_LIABILITY = 9,
};

typedef SWIFT_ENUM(NSInteger, AssetType, closed) {
  AssetTypeUNKNOWN = 0,
  AssetTypeASSET = 1,
  AssetTypeLIABILITY = 2,
};


SWIFT_CLASS("_TtC9MobileSDK21AuthenticationManager")
@interface AuthenticationManager : NSObject
/// Gets the token from the saved set of credentials.
///
/// returns:
/// A <code>String</code>? containing the access token which needs to be attached to the HTTP request headers.
- (NSString * _Nullable)getToken SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A class which represents the response from the Moneysoft API when attempting to log in.
SWIFT_CLASS("_TtC9MobileSDK19AuthenticationModel")
@interface AuthenticationModel : NSObject
@property (nonatomic, copy) NSString * _Nullable accessToken;
/// Initialises an <code>AuthenticationModel</code> with the specified details.
/// \param accessToken A <code>String</code> representing the access token which will be sent with the API calls.
///
/// \param tokenType A <code>String</code> representing the type of token that the <code>accessToken</code> is for.
///
/// \param expiresIn An <code>Int</code> representing the seconds which the <code>accessToken</code> is valid for.
///
/// \param refreshToken A <code>String</code> representing the token which can be used to reauthenticate the user once the <code>accessToken</code> has expired.
///
- (nonnull instancetype)initWithAccessToken:(NSString * _Nonnull)accessToken tokenType:(NSString * _Nonnull)tokenType expiresIn:(NSInteger)expiresIn refreshToken:(NSString * _Nonnull)refreshToken OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



enum ErrorKey : NSInteger;
enum LoginGrant : NSInteger;

SWIFT_CLASS("_TtC9MobileSDK18EnumerationManager")
@interface EnumerationManager : NSObject
+ (NSString * _Nonnull)labelForAccountType:(enum AccountType)type SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)labelForAssetCategory:(enum AssetCategory)category SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)labelForErrorKey:(enum ErrorKey)key SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)labelForLoginGrant:(enum LoginGrant)key SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP9MobileSDK16ErrorApiProtocol_")
@protocol ErrorApiProtocol
- (void)logErrorWithCode:(NSInteger)code message:(NSString * _Nonnull)message data:(NSData * _Nullable)data;
- (void)submitErrorWithError:(ApiErrorModel * _Nonnull)error;
@end

typedef SWIFT_ENUM(NSInteger, ErrorCode, closed) {
  ErrorCodeUNEXPECTED = 0x7FFFFFFF,
  ErrorCodeJSON_CONVERSION_ERROR = 0x6FFFFFFF,
  ErrorCodeACTION_INCOMPLETE = 0x00000001,
  ErrorCodeMETHOD_UNAVAILABLE = 0x00000002,
  ErrorCodeNOT_CONFIGURED = 0x00000003,
  ErrorCodeINSTITUTIONS_FAILED = 0x00010001,
  ErrorCodePROMPTS_FAILED = 0x00010002,
  ErrorCodeNOT_READY = 0x00010003,
  ErrorCodeLINK_ACCOUNT_FAILED = 0x00010004,
  ErrorCodeLINK_ACCOUNTS_FAILED = 0x00010005,
  ErrorCodeUPDATE_TRANSACTIONS_FAILED = 0x001006,
  ErrorCodeSAVE_TRANSACTIONS_FAILED = 0x00010007,
  ErrorCodePROFILE_FAILED = 0x00010008,
  ErrorCodeLOAD_ACCOUNTS_FAILED = 0x00010009,
  ErrorCodeUNLINK_ACCOUNT_FAILED = 0x0001000A,
  ErrorCodeUNLINK_ACCOUNTS_FAILED = 0x0001000B,
  ErrorCodeLINKABLE_ACCOUNTS_FAILED = 0x0001000C,
  ErrorCodeREQUIRES_MFA = 0x0001000D,
  ErrorCodeMFA_VERIFICATION_FAILED = 0x0001000E,
  ErrorCodeREVALIDATION_FAILED = 0x0001000F,
  ErrorCodeUPDATE_ACCOUNTS_FAILED = 0x00010010,
  ErrorCodeRETRIEVE_ACCOUNTS_FAILED = 0x00010011,
  ErrorCodeINSTITUTION_FAILED = 0x00010012,
  ErrorCodeBALANCE_ONLY_FAILED = 0x00010013,
  ErrorCodeINCLUDE_TRANSACTIONS_FAILED = 0x00010014,
  ErrorCodeSYNCHRONISATION_FAILED = 0x00010015,
  ErrorCodeBACKGROUND_REFRESH_FAILED = 0x00010016,
  ErrorCodeUPDATE_CREDENTIALS_FAILED = 0x00010017,
  ErrorCodeSIGN_IN_FAILED = 0x00020001,
  ErrorCodeEWISE_PROFILE_FAILED = 0x00020002,
  ErrorCodeSESSION_TIMEOUT = 0x00020003,
  ErrorCodeREQUIRES_LOGIN_VERIFICATION = 0x00020004,
  ErrorCodeNOTIFICATION_REGISTRATION_FAILED = 0x00030001,
};

typedef SWIFT_ENUM(NSInteger, ErrorKey, closed) {
  ErrorKeyMESSAGE = 0,
  ErrorKeyMFA_PROMPT = 1,
  ErrorKeyMFA_FIELD_TYPE = 2,
  ErrorKeyPROVIDER = 3,
};


SWIFT_CLASS("_TtC9MobileSDK25FinancialAccountLinkModel")
@interface FinancialAccountLinkModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable providerAccountId;
@property (nonatomic, readonly, copy) NSString * _Nullable providerGroupId;
@property (nonatomic, readonly, copy) NSString * _Nullable number;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) double balance;
@property (nonatomic, readonly) NSInteger type;
@property (nonatomic, readonly, copy) NSString * _Nullable currency;
@property (nonatomic, readonly) NSInteger serviceId;
- (nonnull instancetype)initWithServiceId:(NSInteger)serviceId providerAccountId:(NSString * _Nonnull)providerAccountId providerGroupId:(NSString * _Nonnull)providerGroupId number:(NSString * _Nonnull)number name:(NSString * _Nonnull)name balance:(double)balance type:(NSInteger)type currency:(NSString * _Nullable)currency OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9MobileSDK21FinancialAccountModel")
@interface FinancialAccountModel : SerialisableObject
@property (nonatomic, readonly) NSInteger financialAccountId;
@property (nonatomic, readonly, copy) NSString * _Nullable providerAccountId;
@property (nonatomic, readonly) NSInteger financialInstitutionId;
@property (nonatomic, readonly, copy) NSString * _Nullable providerInstitutionId;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nullable nickname;
@property (nonatomic, copy) NSString * _Nonnull number;
@property (nonatomic) double balance;
@property (nonatomic) enum AccountType type;
@property (nonatomic, copy) NSDate * _Nonnull created;
@property (nonatomic, copy) NSDate * _Nullable lastRefresh;
@property (nonatomic) BOOL disabled;
@property (nonatomic, copy) NSString * _Nullable providerContainerId;
@property (nonatomic) BOOL isBalanceOnly;
@property (nonatomic) BOOL isManualAccount;
@property (nonatomic) BOOL isInBudget;
@property (nonatomic) enum AssetCategory assetCategory;
@property (nonatomic) enum AssetType assetType;
- (nonnull instancetype)initWithFinancialAccountId:(NSInteger)financialAccountId providerAccountId:(NSString * _Nullable)providerAccountId financialInstitutionId:(NSInteger)financialInstitutionId providerInstitutionId:(NSString * _Nullable)providerInstitutionId name:(NSString * _Nonnull)name nickname:(NSString * _Nullable)nickname number:(NSString * _Nonnull)number balance:(double)balance type:(enum AccountType)type created:(NSDate * _Nonnull)created lastRefresh:(NSDate * _Nullable)lastRefresh providerContainerId:(NSString * _Nullable)providerContainerId OBJC_DESIGNATED_INITIALIZER;
- (BOOL)isProperty SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@class FinancialInstitutionModel;
@class InstitutionCredentialsFormModel;
@class FinancialServiceModel;
@class MFAVerificationModel;
@class FinancialTransactionModel;
@class LoginModel;

/// The Moneysoft “Financial” API
/// This class gives access to the related information about the user’s accounts you are logged in as.  It also provides the ability to link, refresh and unlink accounts.
/// <h3>Usage (Swift):</h3>
/// \code
/// let msApi = MoneysoftApi()
/// let institutionsListener: ApiListListener = ApiListListener(
/// 	successHandler: {
/// 		(institutionsResponse) in
/// 			// Success logic here
/// 	}, errorHandler: {
/// 		(error) in
/// 			// Error logic here
/// 	})
///
/// do {
/// 	try msApi.financial().getInstitutions(listener: institutionsListener);
/// }
/// catch {
/// 	// Error handling here
/// }
///
/// \endcode<h3>Usage (Objective-C):</h3>
/// \code
/// MoneysoftApi* msApi = [[MoneysoftApi alloc] init];
/// NSError* financialError = nil;
/// GenericListListener* institutionsListener = [[GenericListListener alloc] initWithSuccessHandler:^(NSArray<FinancialInstitutionModel>* institutions) {
/// 		// Success logic here
/// 	} errorHandler:^(ApiErrorModel* _Nonnull error) {
/// 		// Error logic here
/// 	}];
///
/// [[msApi financialAndReturnError:&financialError] getInstitutions:institutionsListener];
///
/// \endcode
SWIFT_PROTOCOL("_TtP9MobileSDK20FinancialApiProtocol_")
@protocol FinancialApiProtocol
/// Prepares the Financial API for use for the user.
/// \param username A <code>String</code> representing the username of the current user who is logged in.
///
/// \param listener An <code>ApiListener</code> of <code>ApiResponseModel</code> representing the handler for when the request is complete.
///
- (void)prepareWithUsername:(NSString * _Nonnull)username listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
/// Determines if the <code>FinancialApiProtocol</code> is ready to perform API requests.
///
/// returns:
/// A <code>Bool</code> indicating the readiness state.
- (BOOL)ready SWIFT_WARN_UNUSED_RESULT;
/// Get the sign in form for the specified financial institution.
/// \param institution A <code>FinancialInstitutionModel</code> representing the institution you want to get the sign in form for.
///
/// \param listener An <code>ApiListener</code> for an <code>InstitutionCredentialsFormModel</code> representing the handler for when the request is complete.
///
- (void)getSignInFormWithInstitution:(FinancialInstitutionModel * _Nonnull)institution listener:(ApiListener<InstitutionCredentialsFormModel *> * _Nonnull)listener;
/// Get a list of the institutions which the user can link.
/// \param listener An <code>ApiListListener</code> for <code>FinancialInstitutionModel</code>s representing the handler for when the request is complete.
///
- (void)getInstitutionsWithListener:(ApiListListener<FinancialInstitutionModel *> * _Nonnull)listener;
/// Get the institution for the specified id.
/// \param institutionId A <code>String</code> representing the ID of the institution to retrieve.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialInstitutionModel</code> representing the handler for when the request is complete.
///
- (void)getInstitutionWithInstitutionId:(NSInteger)institutionId listener:(ApiListener<FinancialInstitutionModel *> * _Nonnull)listener;
/// Get the institution for the specified account.
/// \param account A <code>FinancialAccountModel</code> representing the account for which the institution is to be retrieved.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialInstitutionModel</code> representing the handler for when the request is complete.
///
- (void)getInstitutionWithAccount:(FinancialAccountModel * _Nonnull)account listener:(ApiListener<FinancialInstitutionModel *> * _Nonnull)listener;
/// Get a list of services associated to the provided institution.
/// \param institution A <code>FinancialInstitutionModel</code> representing the institution you are attempting to get services for.
///
/// \param listener An <code>ApiListListener</code> for <code>FinancialServiceModel</code>s representing the handler for when the request is complete.
///
- (void)getServicesWithInstitution:(FinancialInstitutionModel * _Nonnull)institution listener:(ApiListListener<FinancialServiceModel *> * _Nonnull)listener;
/// Get a list of accounts which the user can link.
/// \param institutionId A <code>String</code> representing the ID of the institution you are attempting to retrieve accounts for.
///
/// \param credentials An <code>InstitutionCredentialsFormModel</code> containing the sign in details for the institution.
///
/// \param listener An <code>ApiListListener</code> for <code>FinancialAccountLinkModel</code> representing the handler for when the request is complete.
///
- (void)getLinkableAccountsWithInstitutionId:(NSString * _Nonnull)institutionId credentials:(InstitutionCredentialsFormModel * _Nonnull)credentials listener:(ApiListListener<FinancialAccountLinkModel *> * _Nonnull)listener;
/// Link the specified account for the user
/// \param institutionId A <code>String</code> representing the ID of the institution which will be linked.
///
/// \param credentials An <code>InstitutionCredentialsFormModel</code> containing the sign in details for the institution.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)linkAccountWithInstitutionId:(NSString * _Nonnull)institutionId credentials:(InstitutionCredentialsFormModel * _Nonnull)credentials listener:(ApiListener<FinancialAccountModel *> * _Nonnull)listener;
/// Link the specified account for the user
/// \param account A <code>FinancialAccountLinkModel</code> representing the account which will be linked.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)linkAccountWithAccount:(FinancialAccountLinkModel * _Nonnull)account listener:(ApiListener<FinancialAccountModel *> * _Nonnull)listener;
/// Link the specified accounts for the user
/// \param institutionIds A <code>String</code> list representing the IDs of the institutions which will be linked.
///
/// \param credentials An <code>InstitutionCredentialsFormModel</code> containing the sign in details for the institution.
///
/// \param listener An <code>ApiListListener</code> for <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)linkAccountsWithInstitutionIds:(NSArray<NSString *> * _Nonnull)institutionIds credentials:(InstitutionCredentialsFormModel * _Nonnull)credentials listener:(ApiListListener<FinancialAccountModel *> * _Nonnull)listener;
/// Link the specified account for the user
/// \param accounts A <code>FinancialAccountLinkModel</code> list representing the accounts which will be linked.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)linkAccountsWithAccounts:(NSArray<FinancialAccountLinkModel *> * _Nonnull)accounts listener:(ApiListListener<FinancialAccountModel *> * _Nonnull)listener;
/// Sends the multi-factor authentication details to the institutions and attempts to relink or refresh the account(s).
/// \param verification A <code>[String : String]</code> dictionary which contains the institutionID as the key and the MFA verification as the value
///
/// \param listener An <code>ApiListListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)setMFAWithVerification:(MFAVerificationModel * _Nonnull)verification listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
/// Refreshes the details of the specified account
/// \param financialAccount A <code>FinancialAccountModel</code> representing the financial account which should be updated.
///
/// \param includeTransactions A <code>Bool</code> which indicates whether to update the transactions for the specified <code>financialAccount</code>.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)refreshAccountWithFinancialAccount:(FinancialAccountModel * _Nonnull)financialAccount includeTransactions:(BOOL)includeTransactions listener:(ApiListener<FinancialAccountModel *> * _Nonnull)listener;
/// Refreshes the transactions for the specified financial account.
/// \param financialAccount A <code>FinancialAccountModel</code> representing the financial account in which the transactions should be updated for.
///
/// \param listener An <code>ApiListListener</code> for <code>FinancialTransactionModel</code>s representing the handler for when the request is complete.
///
- (void)refreshTransactionsWithFinancialAccount:(FinancialAccountModel * _Nonnull)financialAccount listener:(ApiListListener<FinancialTransactionModel *> * _Nonnull)listener;
/// Refresh the transactions for the specified financial accounts.
/// \param financialAccounts A <code>FinancialAccountModel</code> list representing the financial accounts which the transactions should be updated for.
///
/// \param listener An <code>ApiListListener</code> for <code>FinancialTransactionModel</code>s representing the handler for when the request is complete.
///
- (void)refreshTransactionsWithFinancialAccounts:(NSArray<FinancialAccountModel *> * _Nonnull)financialAccounts listener:(ApiListListener<FinancialTransactionModel *> * _Nonnull)listener;
/// Unlinks the specified account from the current user.
/// \param financialAccount A <code>FinancialAccountModel</code> representing the financial account which needs to be unlinked.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)unlinkAccountWithFinancialAccount:(FinancialAccountModel * _Nonnull)financialAccount listener:(ApiListener<FinancialAccountModel *> * _Nonnull)listener;
/// Unlinks the specified account from the current user.
/// \param financialAccountId A <code>Int</code> representing the financial account ID which needs to be unlinked.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)unlinkAccountWithFinancialAccountId:(NSInteger)financialAccountId listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
/// Unlinks the specified accounts from the current user.
/// \param financialAccounts A <code>FinancialAccountModel</code> list representing the financial accounts which need to be unlinked.
///
/// \param listener An <code>ApiListListener</code> of <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)unlinkAccountsWithFinancialAccounts:(NSArray<FinancialAccountModel *> * _Nonnull)financialAccounts listener:(ApiListListener<FinancialAccountModel *> * _Nonnull)listener;
/// Updates the credentials for an institutions
/// \param credentials An <code>InstitutionCredentialsFormModel</code> representing the credentials which are required to sign in to the institution.
///
/// \param listener An <code>ApiListener</code> of an <code>ApiResponseModel</code> representing the handler for when the request is complete.
///
- (void)updateCredentialsWithCredentials:(InstitutionCredentialsFormModel * _Nonnull)credentials listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
/// Gets all the linked accounts for the current user.
/// \param listener An <code>ApiListListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)getAccountsWithListener:(ApiListListener<FinancialAccountModel *> * _Nonnull)listener;
/// Gets the linked account by the specified id for the current user.
/// \param accountId An <code>Int</code> representing the ID of the financial account.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)getAccountWithAccountId:(NSInteger)accountId listener:(ApiListener<FinancialAccountModel *> * _Nonnull)listener;
/// Marks the specified account as balance only (transactions not saved for the account) or transaction inclusive.
/// \param account A <code>FinancialAccountModel</code> representing the account you wish to change.
///
/// \param balanceOnly A <code>Bool</code> indicating whether or not to include transactions for the account.
///
/// \param listener An <code>ApiListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)makeBalanceOnlyWithAccount:(FinancialAccountModel * _Nonnull)account balanceOnly:(BOOL)balanceOnly listener:(ApiListener<FinancialAccountModel *> * _Nonnull)listener;
/// Marks the specified accounts as balance only (transactions not saved for the account) or transaction inclusive.
/// \param accounts A <code>FinancialAccountModel</code> list representing the accounts you wish to change.
///
/// \param balanceOnly A <code>Bool</code> indicating whether or not to include transactions for the account.
///
/// \param listener An <code>ApiListListener</code> for a <code>FinancialAccountModel</code> representing the handler for when the request is complete.
///
- (void)makeAccountsBalanceOnlyWithAccounts:(NSArray<FinancialAccountModel *> * _Nonnull)accounts balanceOnly:(BOOL)balanceOnly listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
/// Performs a background refresh of all accounts and transactions
/// \param loginDetails A <code>LoginModel</code> representing the user which needs to be logged in to.
///
/// \param listener An <code>ApiListener</code> for an <code>ApiResponseModel</code> representing the handler for when the request is complete.
///
- (void)silentRefreshWithLoginDetails:(LoginModel * _Nonnull)loginDetails institutionId:(NSString * _Nonnull)institutionId accountId:(NSInteger)accountId listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
/// Stops the current financial operation(s)
- (void)stop;
/// Checks to see if there is a financial action already occuring.
///
/// returns:
/// A <code>Bool</code> representing whether an action is running or not.
- (BOOL)isRunning SWIFT_WARN_UNUSED_RESULT;
- (void)forceUnlinkAllAccountsWithListener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
@end


/// A class which represents a single financial institution.
SWIFT_CLASS("_TtC9MobileSDK25FinancialInstitutionModel")
@interface FinancialInstitutionModel : NSObject
@property (nonatomic) NSInteger providerInstitutionId;
@property (nonatomic) NSInteger financialInstitutionId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable alias;
@property (nonatomic, copy) NSString * _Nullable displayName;
@property (nonatomic) NSInteger order;
/// Initialises a <code>FinancialInstitutionModel</code> with the specified details.
/// \param providerId An <code>Int</code> representing the ID of the provider.
///
/// \param providerInstitutionId An <code>Int</code> representing the ID of the institution with respect to the provider.
///
/// \param financialInsitutionId An <code>Int</code> representing the ID of the institution.
///
/// \param name A <code>String</code> representing the name of the institution.
///
/// \param alias A <code>String</code> representing the alternate name of the institution.
///
/// \param displayName A <code>String</code> representing the short-hand equivalent of <code>name</code>.
///
/// \param order An <code>Int</code> representing the position of the institution when ordered against other <code>FinancialInstitutionModel</code>s.
///
/// \param mfa A <code>Bool</code> indicating whether or not the institution required multi-factor authentication.
///
/// \param url A <code>String</code> representing the url for the institution.
///
/// \param active A <code>Bool</code> indicating whether or not the institution is active.
///
- (nonnull instancetype)initWithFinancialServiceId:(NSInteger)financialServiceId providerId:(NSInteger)providerId providerInstitutionId:(NSInteger)providerInstitutionId financialInstitutionId:(NSInteger)financialInstitutionId name:(NSString * _Nonnull)name alias:(NSString * _Nullable)alias displayName:(NSString * _Nonnull)displayName order:(NSInteger)order mfa:(BOOL)mfa url:(NSString * _Nonnull)url active:(BOOL)active OBJC_DESIGNATED_INITIALIZER;
/// Indicates whether the institution requires multi-factor authentication.
///
/// returns:
/// A <code>Bool</code> indicating whether multi-factor authentication is required.
- (BOOL)isMFA SWIFT_WARN_UNUSED_RESULT;
/// Indicates whether the institution is active.
///
/// returns:
/// A <code>Bool</code> indicating whether the institution is active.
- (BOOL)isActive SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9MobileSDK21FinancialServiceModel")
@interface FinancialServiceModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull displayName;
@property (nonatomic, readonly) NSInteger category;
@property (nonatomic, readonly) NSInteger type;
- (nonnull instancetype)initWithServiceId:(NSInteger)serviceId institutionId:(NSInteger)institutionId providerServiceId:(NSInteger)providerServiceId displayName:(NSString * _Nonnull)displayName category:(NSInteger)category type:(NSInteger)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@class FinancialTransactionViewModel;

SWIFT_CLASS("_TtC9MobileSDK29FinancialTransactionListModel")
@interface FinancialTransactionListModel : NSObject
/// Initialises a <code>FinancialTransactionListModel</code> with the specified details.
/// \param transactions An <code>Array</code> of <code>FinancialTransactionViewModel</code> to wrap.
///
- (nonnull instancetype)initWithTransactions:(NSArray<FinancialTransactionViewModel *> * _Nonnull)transactions OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



enum TransactionType : NSInteger;

SWIFT_CLASS("_TtC9MobileSDK25FinancialTransactionModel")
@interface FinancialTransactionModel : NSObject
@property (nonatomic, readonly) NSInteger transactionId;
@property (nonatomic, readonly) NSInteger accountId;
@property (nonatomic, readonly, copy) NSString * _Nullable userId;
@property (nonatomic, readonly, copy) NSString * _Nullable name;
@property (nonatomic, readonly) double amount;
@property (nonatomic, readonly, copy) NSString * _Nullable merchant;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly) NSInteger categoryId;
@property (nonatomic, readonly) enum TransactionType type;
@property (nonatomic, readonly, copy) NSString * _Nullable notes;
@property (nonatomic, readonly) BOOL possibleTransfer;
@property (nonatomic, readonly) BOOL isDeleted;
@property (nonatomic, readonly) BOOL isVerified;
- (nonnull instancetype)initWithTransactionId:(NSInteger)transactionId accountId:(NSInteger)accountId userId:(NSString * _Nullable)userId name:(NSString * _Nullable)name amount:(double)amount merchant:(NSString * _Nullable)merchant date:(NSDate * _Nonnull)date categoryId:(NSInteger)categoryId type:(enum TransactionType)type notes:(NSString * _Nullable)notes possibleTransfer:(BOOL)possibleTransfer isDeleted:(BOOL)isDeleted isVerified:(BOOL)isVerified OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9MobileSDK29FinancialTransactionViewModel")
@interface FinancialTransactionViewModel : NSObject
@property (nonatomic, readonly) NSInteger accountId;
@property (nonatomic, readonly, copy) NSDate * _Nonnull date;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSString * _Nullable merchant;
@property (nonatomic, readonly) double amount;
@property (nonatomic, readonly) NSInteger categoryId;
@property (nonatomic, readonly, copy) NSString * _Nullable notes;
/// Initialises a <code>FinancialTransactionViewModel</code> with the specified details.
/// \param providerTransactionId A <code>String</code> representing the ID of the transaction for the provider.
///
/// \param accountId An <code>Int</code> representing the financial account which the transaction belongs to.
///
/// \param date A <code>Date</code> representing the date when the transaction occurred.
///
/// \param name A <code>String</code> representing the description of the transaction.
///
/// \param merchant A <code>String</code> representing the associated merchant that the transaction occurred for.  Default is empty.
///
/// \param amount A <code>Double</code> representing the value of the transaction.
///
/// \param categoryId An <code>Int</code> representing the category which the transaction belongs to.  Default is -1.
///
/// \param notes A <code>String</code> representing any custom information added to the transaction by the user.  Default is empty.
///
- (nonnull instancetype)initWithProviderTransactionId:(NSString * _Nonnull)providerTransactionId accountId:(NSInteger)accountId date:(NSDate * _Nonnull)date name:(NSString * _Nonnull)name merchant:(NSString * _Nullable)merchant amount:(double)amount categoryId:(NSInteger)categoryId notes:(NSString * _Nullable)notes OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



enum InstitutionCredentialPromptType : NSInteger;

/// This class stores the details about a single prompt provided by an institution in order to sign in.
SWIFT_CLASS("_TtC9MobileSDK32InstitutionCredentialPromptModel")
@interface InstitutionCredentialPromptModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
@property (nonatomic, readonly) NSInteger index;
@property (nonatomic, readonly) enum InstitutionCredentialPromptType type;
@property (nonatomic, copy) NSString * _Nullable savedValue;
/// Initialises an <code>InstitutionCredentialPromptModel</code> with the specified label and prompt type.
/// \param label A <code>String</code> representing the text label associated with the prompt (e.g. “Username”).
///
/// \param type An <code>InstitutionCredentialPromptType</code> representing the type of prompt that is part of the institution’s log in form.
///
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label index:(NSInteger)index type:(enum InstitutionCredentialPromptType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// An enumeration representing the types of prompts which may be provided when attempting to sign in to an institution.
typedef SWIFT_ENUM(NSInteger, InstitutionCredentialPromptType, closed) {
  InstitutionCredentialPromptTypeTEXT = 0,
  InstitutionCredentialPromptTypePASSWORD = 1,
  InstitutionCredentialPromptTypeCHECKBOX = 2,
};


/// This class stores the prompts provided for an institution in order to log in.
SWIFT_CLASS("_TtC9MobileSDK31InstitutionCredentialsFormModel")
@interface InstitutionCredentialsFormModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull providerInstitutionId;
@property (nonatomic, copy) NSArray<InstitutionCredentialPromptModel *> * _Nonnull prompts;
@property (nonatomic) NSInteger financialServiceId;
@property (nonatomic, readonly) NSInteger financialInstitutionId;
/// Initialises an <code>InstitutionCredentialsFormModel</code>.
- (nonnull instancetype)initWithFinancialServiceId:(NSInteger)financialServiceId financialInstitutionId:(NSInteger)financialInstitutionId providerInstitutionId:(NSString * _Nonnull)providerInstitutionId OBJC_DESIGNATED_INITIALIZER;
/// Adds an <code>InstitutionCredentialPromptModel</code> to the sign in form.
/// \param prompt An <code>InstitutionCredentialPromptModel</code> which is part of the sign in form for the institution.
///
- (void)addPromptWithPrompt:(InstitutionCredentialPromptModel * _Nonnull)prompt;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LoginGrant, closed) {
  LoginGrantUNKNOWN = 0,
  LoginGrantPASSWORD = 1,
  LoginGrantVERIFICATION_CODE = 2,
};


/// A class which represents the details entered when attempting to sign in to Moneysoft.
SWIFT_CLASS("_TtC9MobileSDK10LoginModel")
@interface LoginModel : NSObject
/// Initialises a <code>LoginModel</code> with the specified username, password and grant.
/// \param username A <code>String</code> representing the username of the account you are attempting to log in to.
///
/// \param password A <code>String</code> representing the password of the account you are attempting to log in to.
///
/// \param grant A <code>String</code> representing the grant type associated with the log in attempt as per OAuth specifications (e.g. “password”).
///
- (nonnull instancetype)initWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password verification:(NSString * _Nullable)verification grant:(NSString * _Nonnull)grant OBJC_DESIGNATED_INITIALIZER;
/// Returns the username being used in the model.
///
/// returns:
/// A <code>String?</code> containing the username.
- (NSString * _Nullable)getUsername SWIFT_WARN_UNUSED_RESULT;
/// Returns the clear-text password being used in the model.
///
/// returns:
/// A <code>String?</code> containing the password.
- (NSString * _Nullable)getPassword SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9MobileSDK20MFAVerificationModel")
@interface MFAVerificationModel : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
@property (nonatomic, readonly) enum InstitutionCredentialPromptType type;
@property (nonatomic, copy) NSString * _Nullable savedValue;
- (nonnull instancetype)initWithInstitutionId:(NSString * _Nonnull)institutionId label:(NSString * _Nullable)label promptType:(enum InstitutionCredentialPromptType)promptType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithInstitutionId:(NSString * _Nonnull)institutionId label:(NSString * _Nullable)label type:(NSString * _Nullable)type;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@protocol NotificationApiProtocol;
@protocol UserApiProtocol;
@class MoneysoftApiConfiguration;

/// A class which acts as the main entrypoint into the Moneysoft API.  From this object you can access subsequent areas of the API.
SWIFT_CLASS("_TtC9MobileSDK12MoneysoftApi")
@interface MoneysoftApi : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (AuthenticationManager * _Nonnull)authentication SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     See: <code>MoneysoftApiProtocol.error(...)</code>.
///   </li>
/// </ul>
- (id <ErrorApiProtocol> _Nullable)errorAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     See: <code>MoneysoftApiProtocol.financial(...)</code>.
///   </li>
/// </ul>
- (id <FinancialApiProtocol> _Nullable)financialAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     See: <code>MoneysoftApiProtocol.notifications(...)</code>.
///   </li>
/// </ul>
- (id <NotificationApiProtocol> _Nullable)notificationsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     See: <code>MoneysoftApiProtocol.user(...)</code>.
///   </li>
/// </ul>
- (id <UserApiProtocol> _Nullable)userAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (void)configure:(MoneysoftApiConfiguration * _Nonnull)config;
@end

@class UIView;

SWIFT_CLASS("_TtC9MobileSDK25MoneysoftApiConfiguration")
@interface MoneysoftApiConfiguration : NSObject
- (nonnull instancetype)initWithApiUrl:(NSString * _Nonnull)apiUrl apiReferrer:(NSString * _Nonnull)apiReferrer view:(UIView * _Nonnull)view aggregationTimeout:(NSInteger)aggregationTimeout OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// The <code>NotificationApiProtocol</code> defines the set of methods which are available in order to register a device’s token with the respective API.
SWIFT_PROTOCOL("_TtP9MobileSDK23NotificationApiProtocol_")
@protocol NotificationApiProtocol
/// Registers the specified device token with the server.
/// \param token A <code>String</code> representing the device token which can be used to send “push notifications” or “data notifications”.
///
/// \param listener An <code>ApiListener</code> for an <code>ApiResponseModel</code> representing the handler for when the request is complete.
///
- (void)registerToken:(NSString * _Nonnull)token listener:(ApiListener<ApiResponseModel *> * _Nonnull)listener;
@end

typedef SWIFT_ENUM(NSInteger, Platform, closed) {
  PlatformUNKNOWN = -1,
  PlatformPRO = 1,
  PlatformLITE = 5,
};

typedef SWIFT_ENUM(NSInteger, Role, closed) {
  RoleUNKNOWN = -1,
  RoleADMIN = 1,
  RoleUSER = 2,
  RoleADVISER = 3,
  RolePARTNER = 4,
  RoleWHITE_LABEL_ADMIN = 5,
};


typedef SWIFT_ENUM(NSInteger, TransactionType, closed) {
  TransactionTypeUNKNOWN = 0,
  TransactionTypeINCOMING = 1,
  TransactionTypeOUTGOING = 2,
};

@class UserProfileModel;

SWIFT_PROTOCOL("_TtP9MobileSDK15UserApiProtocol_")
@protocol UserApiProtocol
/// Log in to Moneysoft with the specified username and password.
/// \param username A <code>String</code> representing the username of the account you want to log in with.
///
/// \param password A <code>String</code> representing the password of the account you want to log in with.
///
/// \param listener An <code>ApiListener</code> for an <code>Authenticationmodel</code> representing the handler for when the request is complete.
///
- (void)loginWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password listener:(ApiListener<AuthenticationModel *> * _Nonnull)listener;
/// Log in to Moneysoft with the specified login details.
/// \param details A <code>LoginModel</code> representing the login details of account you want to log in as.
///
/// \param listener An <code>ApiListener</code> for an <code>AuthenticationModel</code> representing the handler for when the request is complete.
///
- (void)loginWithDetails:(LoginModel * _Nonnull)details listener:(ApiListener<AuthenticationModel *> * _Nonnull)listener;
/// Get the profile of the current logged in user.
/// \param listener An <code>ApiListener</code> for a <code>UserProfileModel</code> representing the handler for when the request is complete..
///
- (void)profileWithListener:(ApiListener<UserProfileModel *> * _Nonnull)listener;
/// Attempt to reauthenticate the current user.
/// \param listener An <code>ApiListener</code> for an <code>AuthenticationModel</code> representing the handler for when the request is complete..
///
- (void)reauthenticateWithListener:(ApiListener<AuthenticationModel *> * _Nonnull)listener;
/// Signs the current user out of Moneysoft.
- (void)signOut;
@end


SWIFT_CLASS("_TtC9MobileSDK16UserProfileModel")
@interface UserProfileModel : SerialisableObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



typedef SWIFT_ENUM(NSInteger, UserStatus, closed) {
  UserStatusUNKNOWN = -1,
  UserStatusCREATED = 1,
  UserStatusREGISTERED = 2,
  UserStatusSOMETHING = 3,
  UserStatusCANCELLED = 4,
  UserStatusCREATE_DEMO_ACCOUNT = 5,
  UserStatusBUSINESS_CLIENT_EXPIRED = 6,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
